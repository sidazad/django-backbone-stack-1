define([
    'jquery',
    'backbone',
    'marionette',
    '../models/note_model',
], 
function($, Backbone, Marionette,NoteModel) {
    var NoteCollection = Backbone.Collection.extend({
        urlRoot: '/api/v1/notes',
        model: NoteModel, 

        maybeFetch: function(options){
            alert("NoteCollection:maybeFetch");
            // Helper function to fetch only if this collection has not been fetched before.
            if(this._fetched){
                // If this has already been fetched, call the success, if it exists
                options.success && options.success();
                return;
            }

            // when the original success function completes mark this collection as fetched
            var self = this,
                successWrapper = function(success){
                    return function(){
                        self._fetched = true;
                        success && success.apply(this, arguments);
                    };
                };
            options.success = successWrapper(options.success);
            this.fetch(options);
        },

        getOrFetch: function(id, options){
            alert("NoteCollection:getOrFetch");
            // Helper function to use this collection as a cache for models on the server
            var model = this.get(id);

            if(model){
                options.success && options.success(model);
                return;
            }

            model = new NoteModel({
                resource_uri: id
            });

            model.fetch(options);
        }
    });
    return NoteCollection;
});



